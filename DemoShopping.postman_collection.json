{
	"info": {
		"_postman_id": "5ef5afd4-ef69-4a7d-bf1c-ab2e4025d67d",
		"name": "DemoShopping",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38397015",
		"_collection_link": "https://www.postman.com/juliabulavko/workspace/my-workspace/collection/38397015-5ef5afd4-ef69-4a7d-bf1c-ab2e4025d67d?action=share&source=collection_link&creator=38397015"
	},
	"item": [
		{
			"name": "Products",
			"item": [
				{
					"name": "Список всех продуктов",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"",
									"pm.test(\"Response schema is valid for product object\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('array');",
									"  responseData.forEach(function(product) {",
									"    pm.expect(product).to.be.an('object');",
									"    pm.expect(product).to.have.property('product_id');",
									"    pm.expect(product).to.have.property('name');",
									"    pm.expect(product).to.have.property('description');",
									"    pm.expect(product).to.have.property('price');",
									"    pm.expect(product).to.have.property('category');",
									"    pm.expect(product).to.have.property('manufacturer');",
									"    pm.expect(product).to.have.property('imageUrl');",
									"    pm.expect(product).to.have.property('freeShipping');",
									"  });",
									"});",
									"",
									"",
									"pm.test(\"Product ID is a non-negative integer\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    responseData.forEach(function(product) {",
									"        pm.expect(product.product_id).to.be.a('number').and.to.satisfy((value) => value >= 0, \"Product ID should be a non-negative integer\");",
									"    });",
									"});",
									"",
									"",
									"pm.test(\"Price is a non-negative number\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    responseData.forEach(function(product) {",
									"        pm.expect(product.price).to.be.a('number').and.to.be.at.least(0);",
									"    });",
									"});",
									"",
									"",
									"pm.test(\"Category is a non-empty string\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  responseData.forEach(function(product) {",
									"    pm.expect(product.category).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Category should not be empty\");",
									"  });",
									"});",
									"",
									"",
									"pm.test(\"Manufacturer is a non-empty string\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  responseData.forEach(function(product) {",
									"    pm.expect(product.manufacturer).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Manufacturer should not be empty\");",
									"  });",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/products",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Добавление нового продукта",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Продукт успешно добавлен с ID:\");",
									"    pm.expect(pm.response.text()).to.match(/Продукт успешно добавлен с ID: \\d+/);",
									"});",
									"pm.test(\"Проверка, что тип данных - строка\", function () {",
									"    pm.expect(pm.response.text()).to.be.a('string');",
									"});",
									"pm.test(\"Проверяем, что ID присутствует и является числом\", function () {",
									"    const idMatch = pm.response.text().match(/Продукт успешно добавлен с ID: (\\d+)/);",
									"    pm.expect(idMatch[1]).to.match(/^\\d+$/);",
									"});",
									"pm.test(\"Response body is in HTML format\", function () {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"text/html\");",
									"});",
									"",
									"",
									"pm.test(\"Response includes the required string 'Продукт успешно добавлен с ID:'\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Продукт успешно добавлен с ID:\");",
									"});",
									"",
									"",
									"pm.test(\"Response body contains an ID in the expected format\", function () {",
									"    const responseData = pm.response.text();",
									"    ",
									"    pm.expect(responseData).to.include(\"ID:\").and.to.match(/ID: \\d+/);",
									"});",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{$randomProductName}}\",\n  \"description\": \"This is an example product.\",\n  \"price\": {{$randomPrice}},\n  \"category\": \"{{$randomProduct}}\",\n  \"manufacturer\": \"Example Manufacturer\",\n  \"imageUrl\": \"http://example.com/image.jpg\",\n  \"freeShipping\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/add-product",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"add-product"
							]
						}
					},
					"response": []
				},
				{
					"name": "Добавление нового продукта с невалидными данными",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"§1111\",\n  \"description\": \"This is an example product.\",\n  \"price\": -0,900,\n  \"category\": \"BMW\",\n  \"manufacturer\": \"Example Manufacturer\",\n  \"imageUrl\": \"http://example.com/image.jpg\",\n  \"freeShipping\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/add-product",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"add-product"
							]
						}
					},
					"response": []
				},
				{
					"name": "Поиск товара по ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"",
									"pm.test(\"Response has the required fields - product_id, name, description, price, category, manufacturer, imageUrl, freeShipping\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.product_id).to.exist;",
									"    pm.expect(responseData.name).to.exist;",
									"    pm.expect(responseData.description).to.exist;",
									"    pm.expect(responseData.price).to.exist;",
									"    pm.expect(responseData.category).to.exist;",
									"    pm.expect(responseData.manufacturer).to.exist;",
									"    pm.expect(responseData.imageUrl).to.exist;",
									"    pm.expect(responseData.freeShipping).to.exist;",
									"});",
									"",
									"",
									"pm.test(\"Product ID is a non-negative integer\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData.product_id).to.be.a('number').and.to.be.at.least(0);",
									"});",
									"",
									"",
									"pm.test(\"Price is a valid format (decimal or integer)\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData.price).to.match(/^\\d+(\\.\\d+)?$/, \"Price should be a valid format (decimal or integer)\");",
									"});",
									"",
									"",
									"pm.test(\"Category is a non-empty string\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData.category).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Category should not be empty\");",
									"});",
									"",
									"",
									"pm.test(\"Manufacturer is a non-empty string\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.manufacturer).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Manufacturer should not be empty\");",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/products/id/:productld",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"id",
								":productld"
							],
							"variable": [
								{
									"key": "productld",
									"value": "1487",
									"description": "Уникальный идентификатор продукта"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Поиск товара с невалидным ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"    });",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products/id/:productld",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"id",
								":productld"
							],
							"variable": [
								{
									"key": "productld",
									"value": "0,0002",
									"description": "Уникальный идентификатор продукта"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Полное обновление товара по ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Example Product\",\n  \"description\": \"This is an example product.\",\n  \"price\": 150,\n  \"category\": \"Laptops\",\n  \"manufacturer\": \"Example Manufacturer\",\n  \"imageUrl\": \"http://example.com/image.jpg\",\n  \"freeShipping\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/products/id/:productld",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"id",
								":productld"
							],
							"variable": [
								{
									"key": "productld",
									"value": "1487",
									"description": "Уникальный идентификатор продукта"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Полное обновление товара при вводе невалидного ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Example Product\",\n  \"description\": \"This is an example product.\",\n  \"price\": 150,\n  \"category\": \"Laptops\",\n  \"manufacturer\": \"Example Manufacturer\",\n  \"imageUrl\": \"http://example.com/image.jpg\",\n  \"freeShipping\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/products/id/:productld",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"id",
								":productld"
							],
							"variable": [
								{
									"key": "productld",
									"value": "0/1",
									"description": "Уникальный идентификатор продукта"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Частичное обновление товара по ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Example Product\",\n  \"description\": \"This is an example product.\",\n  \"price\": 150,\n  \"category\": \"Laptops\",\n  \"manufacturer\": \"Example Manufacturer\",\n  \"imageUrl\": \"http://example.com/image.jpg\",\n  \"freeShipping\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/products/id/:productld",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"id",
								":productld"
							],
							"variable": [
								{
									"key": "productld",
									"value": "1487",
									"description": "Уникальный идентификатор продукта"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Частичное обновление товара с несуществующим ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Example Product\",\n  \"description\": \"This is an example product.\",\n  \"price\": 150,\n  \"category\": \"Laptops\",\n  \"manufacturer\": \"Example Manufacturer\",\n  \"imageUrl\": \"http://example.com/image.jpg\",\n  \"freeShipping\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/products/id/:productld",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"id",
								":productld"
							],
							"variable": [
								{
									"key": "productld",
									"value": "90000000000000",
									"description": "Уникальный идентификатор продукта"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Поиск товара по категории",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products/FindByCategory?category=Watches",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"FindByCategory"
							],
							"query": [
								{
									"key": "category",
									"value": "Watches",
									"description": "Категория продукта"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Поиск товара c несуществующей категорией",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products/FindByCategory?category=Cars",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"FindByCategory"
							],
							"query": [
								{
									"key": "category",
									"value": "Cars",
									"description": "Категория продукта"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Поиск товара по производителям",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products/FindByManufacturer?manufacturer=Apple",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"FindByManufacturer"
							],
							"query": [
								{
									"key": "manufacturer",
									"value": "Apple",
									"description": "Производитель продукта"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Поиск товара с несуществующим производителем",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products/FindByManufacturer?manufacturer=Lenovo",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"FindByManufacturer"
							],
							"query": [
								{
									"key": "manufacturer",
									"value": "Lenovo",
									"description": "Производитель товара"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Поиск товара с бесплатной доставкой",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products/FindByShipping?freeShipping=true",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"FindByShipping"
							],
							"query": [
								{
									"key": "freeShipping",
									"value": "true",
									"description": "Наличие бесплатной доставки (true/false)"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Поиск товара с невалидным параметром бесплатной доставки",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products/FindByShipping?freeShipping=000000",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"FindByShipping"
							],
							"query": [
								{
									"key": "freeShipping",
									"value": "000000",
									"description": "Наличие бесплатной доставки (true/false)"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Фильтрация списка продуктов",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products/filter?category=Phones&manufacturer=Apple&freeShipping=true&minPrice=0&maxPrice=1000",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"filter"
							],
							"query": [
								{
									"key": "category",
									"value": "Phones",
									"description": "Категория продукта"
								},
								{
									"key": "manufacturer",
									"value": "Apple",
									"description": "Производитель продукта"
								},
								{
									"key": "freeShipping",
									"value": "true",
									"description": "Наличие бесплатной доставки"
								},
								{
									"key": "minPrice",
									"value": "0",
									"description": "Минимальная цена продукта"
								},
								{
									"key": "maxPrice",
									"value": "1000",
									"description": "Максимальная цена продукта"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Фильтрация списка продуктов с пустыми значениями",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products/filter?category&freeShipping=&minPrice=&maxPrice=",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"filter"
							],
							"query": [
								{
									"key": "category",
									"value": null
								},
								{
									"key": "freeShipping",
									"value": ""
								},
								{
									"key": "minPrice",
									"value": ""
								},
								{
									"key": "maxPrice",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление товара по ID",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/products/id/:productld",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"id",
								":productld"
							],
							"variable": [
								{
									"key": "productld",
									"value": "1027",
									"description": "Уникальный идентификатор продукта"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление товара с несуществующим ID",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products/id/:productld",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"id",
								":productld"
							],
							"variable": [
								{
									"key": "productld",
									"value": "1027",
									"description": "Уникальный идентификатор продукта"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Регистрация нового пользователя",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{login}}\",\n  \"password\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Регистрация ранее зарегистрированного пользователя",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{login}}\",\n  \"password\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Авторизация пользователя",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{login}}\",\n  \"password\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Авторизация пользователя с невалидными данными",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"вуншпунш123\",\n  \"password\": \"=====\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Добавление нового пользователя",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"Bulka2006\",\n  \"password\": \"12345678h\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Получение всех user_id и login пользователей",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление пользователя по ID",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{base_url}}/users/:userId",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "698",
									"description": "Уникальный идентификатор пользователя"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление несуществующего пользователя",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{base_url}}/users/:userId",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "698",
									"description": "Уникальный идентификатор пользователя"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Cart",
			"item": [
				{
					"name": "Добавление товара в корзину",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"productId\": 1037,\n  \"quantity\": 12\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/cart",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"cart"
							]
						}
					},
					"response": []
				},
				{
					"name": "Добавление товара в корзину с невалидным количеством",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"productId\": 1037,\n  \"quantity\": -0,2\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/cart",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"cart"
							]
						}
					},
					"response": []
				},
				{
					"name": "Добавление товара в корзину, если пользователь не авторизован",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"productId\": 1037,\n  \"quantity\": 2\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/cart",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"cart"
							]
						}
					},
					"response": []
				},
				{
					"name": "Отображение содержимого корзины пользователя",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{base_url}}/getCart",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"getCart"
							]
						}
					},
					"response": []
				},
				{
					"name": "Отображение содержимого корзины неавторизованного пользователя",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{base_url}}/getCart",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"getCart"
							]
						}
					},
					"response": []
				},
				{
					"name": "Обновление количества товаров в корзине пользователя",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"quantity\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/cart/:cartItemId",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"cart",
								":cartItemId"
							],
							"variable": [
								{
									"key": "cartItemId",
									"value": "{{cartID}}",
									"description": "Идентификатор элемента в корзине"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление товара из корзины пользователя",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/cart/:cartItemId",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"cart",
								":cartItemId"
							],
							"variable": [
								{
									"key": "cartItemId",
									"value": "{{cartID}}",
									"description": "Идентификатор удаляемого элемента корзины"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление несуществующего товара из корзины пользователя",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/cart/:cartItemId",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"cart",
								":cartItemId"
							],
							"variable": [
								{
									"key": "cartItemId",
									"value": "{{cartID}}",
									"description": "Идентификатор удаляемого элемента корзины"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Orders",
			"item": [
				{
					"name": "Создание заказа из товаров в корзине пользователя",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{base_url}}/orders",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "Получение списка всех заказов пользователя",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{base_url}}/user-orders",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "Изменение количества товара",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"quantity\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/orders/:orderId/products/:productId",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"orders",
								":orderId",
								"products",
								":productId"
							],
							"variable": [
								{
									"key": "orderId",
									"value": "2034",
									"description": "Идентификатор заказа"
								},
								{
									"key": "productId",
									"value": "1017",
									"description": "Идентификатор товара"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Обновление общей суммы заказов пользователя",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{base_url}}/update-orders-total",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"update-orders-total"
							]
						}
					},
					"response": []
				},
				{
					"name": "Получение данных об оплаченных заказах",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/orders-history",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"orders-history"
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление товара из заказа",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"quantity\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/orders/:orderId/products/:productId",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"orders",
								":orderId",
								"products",
								":productId"
							],
							"variable": [
								{
									"key": "orderId",
									"value": "2033",
									"description": "Идентификатор заказа"
								},
								{
									"key": "productId",
									"value": "1017",
									"description": "Идентификатор товара"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Payment",
			"item": [
				{
					"name": "Оплата заказа",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"card_type\": \"VISA\",\n  \"card_code\": \"8820354696467284\",\n  \"expiry_month\": 12,\n  \"expiry_year\": 26,\n  \"cvv\": \"123\",\n  \"email\": \"user@example.com\",\n  \"email_paypal\": \"user@example.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/pay",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"pay"
							]
						}
					},
					"response": []
				},
				{
					"name": "Обновление баланса",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/updateBalances",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"updateBalances"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "https://qa.demoshopping.ru",
			"type": "string"
		},
		{
			"key": "productId",
			"value": "24",
			"type": "string"
		},
		{
			"key": "login",
			"value": "vunshpunsh123",
			"type": "string"
		},
		{
			"key": "password",
			"value": "password2345",
			"type": "string"
		},
		{
			"key": "token",
			"value": "",
			"type": "string"
		},
		{
			"key": "cartID",
			"value": "",
			"type": "string"
		}
	]
}